{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Virtual machine name"
            }
        },
        "userName": {
            "type": "string",
            "defaultValue": "azureadmin",
            "metadata": {
                "description": "Username for the guest OS"
            }
        },
        "pwdOrSsh": {
            "type": "securestring",
            "metadata": {
                "description": "user password"
            }
        },
        "vmType": {
            "type": "string",
            "allowedValues": [
                "data",
                "web",
                "app"
            ],
            "metadata": {
                "description": "Select the vm type for this instance."
            }
        },
        "platform": {
            "type": "string",
            "allowedValues": [
                "WinServer",
                "Linux"
            ],
            "metadata": {
                "description": "Select OS platform; WinServer or Linux."
            }
        },
        "instances": {
            "type": "int",
            "maxValue": 100,
            "metadata": {
                "description": "Specify the amount of VM instances to create"
            }
        }
    },
    "variables": {
        "diskSizes": [
            20,
            30
        ],
        "vNetRg": "m2-we-prod-hub1-spoke1-network-rg",
        "vNetName": "m2-we-prod-hub1-spoke1",
        "vNetId": "[resourceId(variables('vNetRg'), 'Microsoft.Networks/virtualNetworks/', variables('vNetName'))]",
        "vmToSubnetMap": {
            "data": "m2-we-prod-hub1-spoke1-app1",
            "web": "m2-we-prod-hub1-spoke1-app2",
            "app": "m2-we-prod-hub1-spoke1-app3"
        },
        "subnetMap": "[variables('vmToSubnetmap')[parameters('vmType')]]",
        "subnetId": "[concat(variables('vNetId'), '/subnets/', variables('subnetMap'))]",
        "windowsOffer": "WindowsServer",
        "windowsSku": "2016-Datacenter",
        "windowsPublisher": "MicrosoftWindowsServer",
        "linuxOffer": "UbuntuServer",
        "linuxSku": "12.04.5-LTS",
        "linuxPublisher": "Canonical",
        "availabilitySetName": "[concat(parameters('vmName'), '-', 'avset')]",
        "availabilitySetId": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "publicIPAddressId": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pNicName'))]"
        },
        "vmNameFunction": "[concat(resourceGroup().name, '-', parameters('vmName'))]",
        "vNicName": "[concat(parameters('vmName'), '-', 'nic')]",
        "pNicName": "[concat(parameters('vmName'), '-', 'pip')]",   
        "copy": [
            {
                "name": "managedDiskId",
                "count": "[length(variables('diskSizes'))]",
                "input": {
                    "lun": "[copyIndex('managedDiskId')]",
                    "createOption": "Empty",
                    "diskSizeGB": "[variables('diskSizes')[copyIndex('managedDiskId')]]"
                }
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "condition": "[equals(parameters('vmType'), 'web')]",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('pNicName'), copyIndex(1))]",
            "location": "[resourceGroup().location]",
            "copy": {
                "count": "[parameters('instances')]",
                "name": "pNicCopy"
            },
            "properties": {
                "publicIPallocationmethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(variables('vmNameFunction'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('vNicName'), copyIndex(1))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('pNicName'), copyIndex(1)))]"
            ],
            "copy": {
                "count": "[parameters('instances')]",
                "name": "vNicCopy"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": "[if(equals(parameters('vmType'), 'web'), variables('publicIpAddressId'), json('null'))]",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2017-03-30",
            "name": "[variables('availabilitySetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 3
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "condition": "[equals(parameters('vmType'), 'data')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2017-03-30",
            "name": "[concat(variables('vmNameFunction'), '-mdisk', copyIndex(1))]",
            "location": "[resourceGroup().location]",
            "copy": {
                "count": "[parameters('instances')]",
                "name": "diskCopy"
            },
            "sku": {
                "name": "Premium_LRS"
            },
            "properties": {
                "creationData": {
                    "createOption": "Empty"
                },
                "diskSizeGB": 200
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "name": "[concat(variables('vmNameFunction'), copyIndex(1))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkinterfaces/', concat(variables('vNicName'), copyIndex(1)))]",
                "[resourceId('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "[resourceId('Microsoft.Compute/disks/', concat(variables('vmNameFunction'), '-mDisk', copyIndex(1)))]"
            ],
            "copy": {
                "count": "[parameters('instances')]",
                "name": "vmCopy"
            },
            "properties": {
                "availabilitySet": "[variables('availabilitySetId')]",
                "hardwareprofile": {
                    "vmsize": "Standard_DS3_v2"
                },
                "osProfile": {
                    "computername": "[concat(variables('vmNameFunction'), copyIndex(1))]",
                    "adminusername": "[parameters('username')]",
                    "adminpassword": "[parameters('pwdOrSsh')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[if(equals(parameters('platform'), 'WinServer'), variables('windowsPublisher'), variables('linuxPublisher'))]",
                        "offer": "[if(equals(parameters('platform'), 'WinServer'), variables('windowsOffer'), variables('linuxOffer'))]",
                        "version": "latest",
                        "sku": "[if(equals(parameters('platform'), 'WinServer'), variables('windowsSku'), variables('linuxSku'))]"
                    },
                    "osdisk": {
                        "name": "[concat(variables('vmNameFunction'), '-osDisk', copyIndex(1))]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[if(equals(parameters('vmType'), 'data'), 'Premium_LRS', 'Standard_LRS')]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": "[if(equals(parameters('vmType'), 'data'), variables('managedDiskId'), json('null'))]"
                },
                "networkprofile": {
                    "networkinterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkinterfaces', concat(variables('vNicName'), copyIndex(1)))]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "platform": {
            "type": "string",
            "value": "[parameters('platform')]"
        },
        "connectionInfo": {
            "type": "string",
            "value": "[if(equals(parameters('platform'), 'WinServer'), 'Use RDP to connect to the VM', 'Use SSH to connect to the VM')]"
        },
        "vmType": {
            "type": "string",
            "value": "[parameters('vmType')]"
        },
        "vmName": {
            "type": "string",
            "value": "[variables('vmNameFunction')]"
        }
    }
}